mod Op
    traits
        Add: (rhs: Self) -> Self
        Sub: (rhs: Self) -> Self
        Mul: (rhs: Self) -> Self
        Div: (rhs: Self) -> Self
        Square: Self
    defs
        Op
            Square: Mul(Self)

mod String
    struct
        value: string
    defs
        Op
            Add: .String(value + rhs.value)

mod Int
    struct
        value: int
    defs
        Op
            Add: .Int(value + rhs.value)
            Sub: .Int(value - rhs.value)
            Mul: .Int(value * rhs.value)
            Div: .Int(value / rhs.value)
        String: .String(value.to_string)

mod Point
    class
        x: Int
        y: Int
    traits
        X: Int
        Y: Int
    defs
        Op
            Add: .Point(X + rhs.X, Y + rhs.Y)